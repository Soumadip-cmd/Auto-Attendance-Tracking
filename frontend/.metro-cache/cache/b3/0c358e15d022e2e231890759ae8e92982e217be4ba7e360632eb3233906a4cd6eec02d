{"dependencies":[{"name":"domhandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":77,"index":77}}],"key":"KYhnx5+o028X5IFQh7qGm6XZdSU=","exportNames":["*"],"imports":1}},{"name":"dom-serializer","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":78},"end":{"line":2,"column":40,"index":118}}],"key":"1LlUHcSOfk/O/at41id2iTgNHbQ=","exportNames":["*"],"imports":1}},{"name":"domelementtype","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":119},"end":{"line":3,"column":45,"index":164}}],"key":"tVJ16XfW1AI8lcfhJrZBho14ocA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.getOuterHTML = getOuterHTML;\n  exports.getInnerHTML = getInnerHTML;\n  exports.getText = getText;\n  exports.textContent = textContent;\n  exports.innerText = innerText;\n  var _domhandler = require(_dependencyMap[0], \"domhandler\");\n  var _domSerializer = require(_dependencyMap[1], \"dom-serializer\");\n  var renderHTML = _interopDefault(_domSerializer);\n  var _domelementtype = require(_dependencyMap[2], \"domelementtype\");\n  /**\n   * @category Stringify\n   * @deprecated Use the `dom-serializer` module directly.\n   * @param node Node to get the outer HTML of.\n   * @param options Options for serialization.\n   * @returns `node`'s outer HTML.\n   */\n  function getOuterHTML(node, options) {\n    return (0, renderHTML.default)(node, options);\n  }\n  /**\n   * @category Stringify\n   * @deprecated Use the `dom-serializer` module directly.\n   * @param node Node to get the inner HTML of.\n   * @param options Options for serialization.\n   * @returns `node`'s inner HTML.\n   */\n  function getInnerHTML(node, options) {\n    return (0, _domhandler.hasChildren)(node) ? node.children.map(node => getOuterHTML(node, options)).join(\"\") : \"\";\n  }\n  /**\n   * Get a node's inner text. Same as `textContent`, but inserts newlines for `<br>` tags. Ignores comments.\n   *\n   * @category Stringify\n   * @deprecated Use `textContent` instead.\n   * @param node Node to get the inner text of.\n   * @returns `node`'s inner text.\n   */\n  function getText(node) {\n    if (Array.isArray(node)) return node.map(getText).join(\"\");\n    if ((0, _domhandler.isTag)(node)) return node.name === \"br\" ? \"\\n\" : getText(node.children);\n    if ((0, _domhandler.isCDATA)(node)) return getText(node.children);\n    if ((0, _domhandler.isText)(node)) return node.data;\n    return \"\";\n  }\n  /**\n   * Get a node's text content. Ignores comments.\n   *\n   * @category Stringify\n   * @param node Node to get the text content of.\n   * @returns `node`'s text content.\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/textContent}\n   */\n  function textContent(node) {\n    if (Array.isArray(node)) return node.map(textContent).join(\"\");\n    if ((0, _domhandler.hasChildren)(node) && !(0, _domhandler.isComment)(node)) {\n      return textContent(node.children);\n    }\n    if ((0, _domhandler.isText)(node)) return node.data;\n    return \"\";\n  }\n  /**\n   * Get a node's inner text, ignoring `<script>` and `<style>` tags. Ignores comments.\n   *\n   * @category Stringify\n   * @param node Node to get the inner text of.\n   * @returns `node`'s inner text.\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/Node/innerText}\n   */\n  function innerText(node) {\n    if (Array.isArray(node)) return node.map(innerText).join(\"\");\n    if ((0, _domhandler.hasChildren)(node) && (node.type === _domelementtype.ElementType.Tag || (0, _domhandler.isCDATA)(node))) {\n      return innerText(node.children);\n    }\n    if ((0, _domhandler.isText)(node)) return node.data;\n    return \"\";\n  }\n});","lineCount":88,"map":[[12,2,11,0,"exports"],[12,9,11,0],[12,10,11,0,"getOuterHTML"],[12,22,11,0],[12,25,11,0,"getOuterHTML"],[12,37,11,0],[13,2,21,0,"exports"],[13,9,21,0],[13,10,21,0,"getInnerHTML"],[13,22,21,0],[13,25,21,0,"getInnerHTML"],[13,37,21,0],[14,2,34,0,"exports"],[14,9,34,0],[14,10,34,0,"getText"],[14,17,34,0],[14,20,34,0,"getText"],[14,27,34,0],[15,2,53,0,"exports"],[15,9,53,0],[15,10,53,0,"textContent"],[15,21,53,0],[15,24,53,0,"textContent"],[15,35,53,0],[16,2,71,0,"exports"],[16,9,71,0],[16,10,71,0,"innerText"],[16,19,71,0],[16,22,71,0,"innerText"],[16,31,71,0],[17,2,1,0],[17,6,1,0,"_domhandler"],[17,17,1,0],[17,20,1,0,"require"],[17,27,1,0],[17,28,1,0,"_dependencyMap"],[17,42,1,0],[18,2,2,0],[18,6,2,0,"_domSerializer"],[18,20,2,0],[18,23,2,0,"require"],[18,30,2,0],[18,31,2,0,"_dependencyMap"],[18,45,2,0],[19,2,2,0],[19,6,2,0,"renderHTML"],[19,16,2,0],[19,19,2,0,"_interopDefault"],[19,34,2,0],[19,35,2,0,"_domSerializer"],[19,49,2,0],[20,2,3,0],[20,6,3,0,"_domelementtype"],[20,21,3,0],[20,24,3,0,"require"],[20,31,3,0],[20,32,3,0,"_dependencyMap"],[20,46,3,0],[21,2,4,0],[22,0,5,0],[23,0,6,0],[24,0,7,0],[25,0,8,0],[26,0,9,0],[27,0,10,0],[28,2,11,7],[28,11,11,16,"getOuterHTML"],[28,23,11,28,"getOuterHTML"],[28,24,11,29,"node"],[28,28,11,33],[28,30,11,35,"options"],[28,37,11,42],[28,39,11,44],[29,4,12,4],[29,11,12,11],[29,15,12,11,"renderHTML"],[29,25,12,21],[29,26,12,21,"default"],[29,33,12,21],[29,35,12,22,"node"],[29,39,12,26],[29,41,12,28,"options"],[29,48,12,35],[29,49,12,36],[30,2,13,0],[31,2,14,0],[32,0,15,0],[33,0,16,0],[34,0,17,0],[35,0,18,0],[36,0,19,0],[37,0,20,0],[38,2,21,7],[38,11,21,16,"getInnerHTML"],[38,23,21,28,"getInnerHTML"],[38,24,21,29,"node"],[38,28,21,33],[38,30,21,35,"options"],[38,37,21,42],[38,39,21,44],[39,4,22,4],[39,11,22,11],[39,15,22,11,"hasChildren"],[39,26,22,22],[39,27,22,22,"hasChildren"],[39,38,22,22],[39,40,22,23,"node"],[39,44,22,27],[39,45,22,28],[39,48,23,10,"node"],[39,52,23,14],[39,53,23,15,"children"],[39,61,23,23],[39,62,23,24,"map"],[39,65,23,27],[39,66,23,29,"node"],[39,70,23,33],[39,74,23,38,"getOuterHTML"],[39,86,23,50],[39,87,23,51,"node"],[39,91,23,55],[39,93,23,57,"options"],[39,100,23,64],[39,101,23,65],[39,102,23,66],[39,103,23,67,"join"],[39,107,23,71],[39,108,23,72],[39,110,23,74],[39,111,23,75],[39,114,24,10],[39,116,24,12],[40,2,25,0],[41,2,26,0],[42,0,27,0],[43,0,28,0],[44,0,29,0],[45,0,30,0],[46,0,31,0],[47,0,32,0],[48,0,33,0],[49,2,34,7],[49,11,34,16,"getText"],[49,18,34,23,"getText"],[49,19,34,24,"node"],[49,23,34,28],[49,25,34,30],[50,4,35,4],[50,8,35,8,"Array"],[50,13,35,13],[50,14,35,14,"isArray"],[50,21,35,21],[50,22,35,22,"node"],[50,26,35,26],[50,27,35,27],[50,29,36,8],[50,36,36,15,"node"],[50,40,36,19],[50,41,36,20,"map"],[50,44,36,23],[50,45,36,24,"getText"],[50,52,36,31],[50,53,36,32],[50,54,36,33,"join"],[50,58,36,37],[50,59,36,38],[50,61,36,40],[50,62,36,41],[51,4,37,4],[51,8,37,8],[51,12,37,8,"isTag"],[51,23,37,13],[51,24,37,13,"isTag"],[51,29,37,13],[51,31,37,14,"node"],[51,35,37,18],[51,36,37,19],[51,38,38,8],[51,45,38,15,"node"],[51,49,38,19],[51,50,38,20,"name"],[51,54,38,24],[51,59,38,29],[51,63,38,33],[51,66,38,36],[51,70,38,40],[51,73,38,43,"getText"],[51,80,38,50],[51,81,38,51,"node"],[51,85,38,55],[51,86,38,56,"children"],[51,94,38,64],[51,95,38,65],[52,4,39,4],[52,8,39,8],[52,12,39,8,"isCDATA"],[52,23,39,15],[52,24,39,15,"isCDATA"],[52,31,39,15],[52,33,39,16,"node"],[52,37,39,20],[52,38,39,21],[52,40,40,8],[52,47,40,15,"getText"],[52,54,40,22],[52,55,40,23,"node"],[52,59,40,27],[52,60,40,28,"children"],[52,68,40,36],[52,69,40,37],[53,4,41,4],[53,8,41,8],[53,12,41,8,"isText"],[53,23,41,14],[53,24,41,14,"isText"],[53,30,41,14],[53,32,41,15,"node"],[53,36,41,19],[53,37,41,20],[53,39,42,8],[53,46,42,15,"node"],[53,50,42,19],[53,51,42,20,"data"],[53,55,42,24],[54,4,43,4],[54,11,43,11],[54,13,43,13],[55,2,44,0],[56,2,45,0],[57,0,46,0],[58,0,47,0],[59,0,48,0],[60,0,49,0],[61,0,50,0],[62,0,51,0],[63,0,52,0],[64,2,53,7],[64,11,53,16,"textContent"],[64,22,53,27,"textContent"],[64,23,53,28,"node"],[64,27,53,32],[64,29,53,34],[65,4,54,4],[65,8,54,8,"Array"],[65,13,54,13],[65,14,54,14,"isArray"],[65,21,54,21],[65,22,54,22,"node"],[65,26,54,26],[65,27,54,27],[65,29,55,8],[65,36,55,15,"node"],[65,40,55,19],[65,41,55,20,"map"],[65,44,55,23],[65,45,55,24,"textContent"],[65,56,55,35],[65,57,55,36],[65,58,55,37,"join"],[65,62,55,41],[65,63,55,42],[65,65,55,44],[65,66,55,45],[66,4,56,4],[66,8,56,8],[66,12,56,8,"hasChildren"],[66,23,56,19],[66,24,56,19,"hasChildren"],[66,35,56,19],[66,37,56,20,"node"],[66,41,56,24],[66,42,56,25],[66,46,56,29],[66,47,56,30],[66,51,56,30,"isComment"],[66,62,56,39],[66,63,56,39,"isComment"],[66,72,56,39],[66,74,56,40,"node"],[66,78,56,44],[66,79,56,45],[66,81,56,47],[67,6,57,8],[67,13,57,15,"textContent"],[67,24,57,26],[67,25,57,27,"node"],[67,29,57,31],[67,30,57,32,"children"],[67,38,57,40],[67,39,57,41],[68,4,58,4],[69,4,59,4],[69,8,59,8],[69,12,59,8,"isText"],[69,23,59,14],[69,24,59,14,"isText"],[69,30,59,14],[69,32,59,15,"node"],[69,36,59,19],[69,37,59,20],[69,39,60,8],[69,46,60,15,"node"],[69,50,60,19],[69,51,60,20,"data"],[69,55,60,24],[70,4,61,4],[70,11,61,11],[70,13,61,13],[71,2,62,0],[72,2,63,0],[73,0,64,0],[74,0,65,0],[75,0,66,0],[76,0,67,0],[77,0,68,0],[78,0,69,0],[79,0,70,0],[80,2,71,7],[80,11,71,16,"innerText"],[80,20,71,25,"innerText"],[80,21,71,26,"node"],[80,25,71,30],[80,27,71,32],[81,4,72,4],[81,8,72,8,"Array"],[81,13,72,13],[81,14,72,14,"isArray"],[81,21,72,21],[81,22,72,22,"node"],[81,26,72,26],[81,27,72,27],[81,29,73,8],[81,36,73,15,"node"],[81,40,73,19],[81,41,73,20,"map"],[81,44,73,23],[81,45,73,24,"innerText"],[81,54,73,33],[81,55,73,34],[81,56,73,35,"join"],[81,60,73,39],[81,61,73,40],[81,63,73,42],[81,64,73,43],[82,4,74,4],[82,8,74,8],[82,12,74,8,"hasChildren"],[82,23,74,19],[82,24,74,19,"hasChildren"],[82,35,74,19],[82,37,74,20,"node"],[82,41,74,24],[82,42,74,25],[82,47,74,30,"node"],[82,51,74,34],[82,52,74,35,"type"],[82,56,74,39],[82,61,74,44,"ElementType"],[82,76,74,55],[82,77,74,55,"ElementType"],[82,88,74,55],[82,89,74,56,"Tag"],[82,92,74,59],[82,96,74,63],[82,100,74,63,"isCDATA"],[82,111,74,70],[82,112,74,70,"isCDATA"],[82,119,74,70],[82,121,74,71,"node"],[82,125,74,75],[82,126,74,76],[82,127,74,77],[82,129,74,79],[83,6,75,8],[83,13,75,15,"innerText"],[83,22,75,24],[83,23,75,25,"node"],[83,27,75,29],[83,28,75,30,"children"],[83,36,75,38],[83,37,75,39],[84,4,76,4],[85,4,77,4],[85,8,77,8],[85,12,77,8,"isText"],[85,23,77,14],[85,24,77,14,"isText"],[85,30,77,14],[85,32,77,15,"node"],[85,36,77,19],[85,37,77,20],[85,39,78,8],[85,46,78,15,"node"],[85,50,78,19],[85,51,78,20,"data"],[85,55,78,24],[86,4,79,4],[86,11,79,11],[86,13,79,13],[87,2,80,0],[88,0,80,1],[88,3]],"functionMap":{"names":["<global>","getOuterHTML","getInnerHTML","node.children.map$argument_0","getText","textContent","innerText"],"mappings":"AAA;OCU;CDE;OEQ;4BCE,qCD;CFE;OIS;CJU;OKS;CLS;OMS;CNS"},"hasCjsExports":false},"type":"js/module"}]}