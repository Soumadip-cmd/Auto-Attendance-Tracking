{"dependencies":[{"name":"domelementtype","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":30},"end":{"line":4,"column":46,"index":76}}],"key":"tVJ16XfW1AI8lcfhJrZBho14ocA=","exportNames":["*"],"imports":1}},{"name":"entities","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":77},"end":{"line":5,"column":66,"index":143}}],"key":"LclRQkIykhscZjPpvm4yQEr0zX8=","exportNames":["*"],"imports":1}},{"name":"./foreignNames.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":319},"end":{"line":12,"column":65,"index":384}}],"key":"neIz+pmNPK/IvEsNmBwj5rGX7sc=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  exports.render = render;\n  var _domelementtype = require(_dependencyMap[0], \"domelementtype\");\n  var ElementType = _interopNamespace(_domelementtype);\n  var _entities = require(_dependencyMap[1], \"entities\");\n  var _foreignNamesJs = require(_dependencyMap[2], \"./foreignNames.js\");\n  /*\n   * Module dependencies\n   */\n\n  /**\n   * Mixed-case SVG and MathML tags & attributes\n   * recognized by the HTML parser.\n   *\n   * @see https://html.spec.whatwg.org/multipage/parsing.html#parsing-main-inforeign\n   */\n\n  var unencodedElements = new Set([\"style\", \"script\", \"xmp\", \"iframe\", \"noembed\", \"noframes\", \"plaintext\", \"noscript\"]);\n  function replaceQuotes(value) {\n    return value.replace(/\"/g, \"&quot;\");\n  }\n  /**\n   * Format attributes\n   */\n  function formatAttributes(attributes, opts) {\n    var _a;\n    if (!attributes) return;\n    var encode = ((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) === false ? replaceQuotes : opts.xmlMode || opts.encodeEntities !== \"utf8\" ? _entities.encodeXML : _entities.escapeAttribute;\n    return Object.keys(attributes).map(key => {\n      var _a, _b;\n      var value = (_a = attributes[key]) !== null && _a !== void 0 ? _a : \"\";\n      if (opts.xmlMode === \"foreign\") {\n        /* Fix up mixed-case attribute names */\n        key = (_b = _foreignNamesJs.attributeNames.get(key)) !== null && _b !== void 0 ? _b : key;\n      }\n      if (!opts.emptyAttrs && !opts.xmlMode && value === \"\") {\n        return key;\n      }\n      return `${key}=\"${encode(value)}\"`;\n    }).join(\" \");\n  }\n  /**\n   * Self-enclosing tags\n   */\n  var singleTag = new Set([\"area\", \"base\", \"basefont\", \"br\", \"col\", \"command\", \"embed\", \"frame\", \"hr\", \"img\", \"input\", \"isindex\", \"keygen\", \"link\", \"meta\", \"param\", \"source\", \"track\", \"wbr\"]);\n  /**\n   * Renders a DOM node or an array of DOM nodes to a string.\n   *\n   * Can be thought of as the equivalent of the `outerHTML` of the passed node(s).\n   *\n   * @param node Node to be rendered.\n   * @param options Changes serialization behavior\n   */\n  function render(node) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var nodes = \"length\" in node ? node : [node];\n    var output = \"\";\n    for (var i = 0; i < nodes.length; i++) {\n      output += renderNode(nodes[i], options);\n    }\n    return output;\n  }\n  var _default = render;\n  function renderNode(node, options) {\n    switch (node.type) {\n      case ElementType.Root:\n        return render(node.children, options);\n      // @ts-expect-error We don't use `Doctype` yet\n      case ElementType.Doctype:\n      case ElementType.Directive:\n        return renderDirective(node);\n      case ElementType.Comment:\n        return renderComment(node);\n      case ElementType.CDATA:\n        return renderCdata(node);\n      case ElementType.Script:\n      case ElementType.Style:\n      case ElementType.Tag:\n        return renderTag(node, options);\n      case ElementType.Text:\n        return renderText(node, options);\n    }\n  }\n  var foreignModeIntegrationPoints = new Set([\"mi\", \"mo\", \"mn\", \"ms\", \"mtext\", \"annotation-xml\", \"foreignObject\", \"desc\", \"title\"]);\n  var foreignElements = new Set([\"svg\", \"math\"]);\n  function renderTag(elem, opts) {\n    var _a;\n    // Handle SVG / MathML in HTML\n    if (opts.xmlMode === \"foreign\") {\n      /* Fix up mixed-case element names */\n      elem.name = (_a = _foreignNamesJs.elementNames.get(elem.name)) !== null && _a !== void 0 ? _a : elem.name;\n      /* Exit foreign mode at integration points */\n      if (elem.parent && foreignModeIntegrationPoints.has(elem.parent.name)) {\n        opts = {\n          ...opts,\n          xmlMode: false\n        };\n      }\n    }\n    if (!opts.xmlMode && foreignElements.has(elem.name)) {\n      opts = {\n        ...opts,\n        xmlMode: \"foreign\"\n      };\n    }\n    var tag = `<${elem.name}`;\n    var attribs = formatAttributes(elem.attribs, opts);\n    if (attribs) {\n      tag += ` ${attribs}`;\n    }\n    if (elem.children.length === 0 && (opts.xmlMode ?\n    // In XML mode or foreign mode, and user hasn't explicitly turned off self-closing tags\n    opts.selfClosingTags !== false :\n    // User explicitly asked for self-closing tags, even in HTML mode\n    opts.selfClosingTags && singleTag.has(elem.name))) {\n      if (!opts.xmlMode) tag += \" \";\n      tag += \"/>\";\n    } else {\n      tag += \">\";\n      if (elem.children.length > 0) {\n        tag += render(elem.children, opts);\n      }\n      if (opts.xmlMode || !singleTag.has(elem.name)) {\n        tag += `</${elem.name}>`;\n      }\n    }\n    return tag;\n  }\n  function renderDirective(elem) {\n    return `<${elem.data}>`;\n  }\n  function renderText(elem, opts) {\n    var _a;\n    var data = elem.data || \"\";\n    // If entities weren't decoded, no need to encode them back\n    if (((_a = opts.encodeEntities) !== null && _a !== void 0 ? _a : opts.decodeEntities) !== false && !(!opts.xmlMode && elem.parent && unencodedElements.has(elem.parent.name))) {\n      data = opts.xmlMode || opts.encodeEntities !== \"utf8\" ? (0, _entities.encodeXML)(data) : (0, _entities.escapeText)(data);\n    }\n    return data;\n  }\n  function renderCdata(elem) {\n    return `<![CDATA[${elem.children[0].data}]]>`;\n  }\n  function renderComment(elem) {\n    return `<!--${elem.data}-->`;\n  }\n});","lineCount":173,"map":[[22,2,93,0,"Object"],[22,8,93,0],[22,9,93,0,"defineProperty"],[22,23,93,0],[22,24,93,0,"exports"],[22,31,93,0],[23,4,93,0,"enumerable"],[23,14,93,0],[24,4,93,0,"get"],[24,7,93,0],[24,18,93,0,"get"],[24,19,93,0],[25,6,93,0],[25,13,93,0,"_default"],[25,21,93,0],[26,4,93,0],[27,2,93,0],[28,2,85,0,"exports"],[28,9,85,0],[28,10,85,0,"render"],[28,16,85,0],[28,19,85,0,"render"],[28,25,85,0],[29,2,4,0],[29,6,4,0,"_domelementtype"],[29,21,4,0],[29,24,4,0,"require"],[29,31,4,0],[29,32,4,0,"_dependencyMap"],[29,46,4,0],[30,2,4,0],[30,6,4,0,"ElementType"],[30,17,4,0],[30,20,4,0,"_interopNamespace"],[30,37,4,0],[30,38,4,0,"_domelementtype"],[30,53,4,0],[31,2,5,0],[31,6,5,0,"_entities"],[31,15,5,0],[31,18,5,0,"require"],[31,25,5,0],[31,26,5,0,"_dependencyMap"],[31,40,5,0],[32,2,12,0],[32,6,12,0,"_foreignNamesJs"],[32,21,12,0],[32,24,12,0,"require"],[32,31,12,0],[32,32,12,0,"_dependencyMap"],[32,46,12,0],[33,2,1,0],[34,0,2,0],[35,0,3,0],[37,2,6,0],[38,0,7,0],[39,0,8,0],[40,0,9,0],[41,0,10,0],[42,0,11,0],[44,2,13,0],[44,6,13,6,"unencodedElements"],[44,23,13,23],[44,26,13,26],[44,30,13,30,"Set"],[44,33,13,33],[44,34,13,34],[44,35,14,4],[44,42,14,11],[44,44,15,4],[44,52,15,12],[44,54,16,4],[44,59,16,9],[44,61,17,4],[44,69,17,12],[44,71,18,4],[44,80,18,13],[44,82,19,4],[44,92,19,14],[44,94,20,4],[44,105,20,15],[44,107,21,4],[44,117,21,14],[44,118,22,1],[44,119,22,2],[45,2,23,0],[45,11,23,9,"replaceQuotes"],[45,24,23,22,"replaceQuotes"],[45,25,23,23,"value"],[45,30,23,28],[45,32,23,30],[46,4,24,4],[46,11,24,11,"value"],[46,16,24,16],[46,17,24,17,"replace"],[46,24,24,24],[46,25,24,25],[46,29,24,29],[46,31,24,31],[46,39,24,39],[46,40,24,40],[47,2,25,0],[48,2,26,0],[49,0,27,0],[50,0,28,0],[51,2,29,0],[51,11,29,9,"formatAttributes"],[51,27,29,25,"formatAttributes"],[51,28,29,26,"attributes"],[51,38,29,36],[51,40,29,38,"opts"],[51,44,29,42],[51,46,29,44],[52,4,30,4],[52,8,30,8,"_a"],[52,10,30,10],[53,4,31,4],[53,8,31,8],[53,9,31,9,"attributes"],[53,19,31,19],[53,21,32,8],[54,4,33,4],[54,8,33,10,"encode"],[54,14,33,16],[54,17,33,19],[54,18,33,20],[54,19,33,21,"_a"],[54,21,33,23],[54,24,33,26,"opts"],[54,28,33,30],[54,29,33,31,"encodeEntities"],[54,43,33,45],[54,49,33,51],[54,53,33,55],[54,57,33,59,"_a"],[54,59,33,61],[54,64,33,66],[54,69,33,71],[54,70,33,72],[54,73,33,75,"_a"],[54,75,33,77],[54,78,33,80,"opts"],[54,82,33,84],[54,83,33,85,"decodeEntities"],[54,97,33,99],[54,103,33,105],[54,108,33,110],[54,111,34,10,"replaceQuotes"],[54,124,34,23],[54,127,35,10,"opts"],[54,131,35,14],[54,132,35,15,"xmlMode"],[54,139,35,22],[54,143,35,26,"opts"],[54,147,35,30],[54,148,35,31,"encodeEntities"],[54,162,35,45],[54,167,35,50],[54,173,35,56],[54,176,36,14,"encodeXML"],[54,185,36,23],[54,186,36,23,"encodeXML"],[54,195,36,23],[54,198,37,14,"escapeAttribute"],[54,207,37,29],[54,208,37,29,"escapeAttribute"],[54,223,37,29],[55,4,38,4],[55,11,38,11,"Object"],[55,17,38,17],[55,18,38,18,"keys"],[55,22,38,22],[55,23,38,23,"attributes"],[55,33,38,33],[55,34,38,34],[55,35,39,9,"map"],[55,38,39,12],[55,39,39,14,"key"],[55,42,39,17],[55,46,39,22],[56,6,40,8],[56,10,40,12,"_a"],[56,12,40,14],[56,14,40,16,"_b"],[56,16,40,18],[57,6,41,8],[57,10,41,14,"value"],[57,15,41,19],[57,18,41,22],[57,19,41,23,"_a"],[57,21,41,25],[57,24,41,28,"attributes"],[57,34,41,38],[57,35,41,39,"key"],[57,38,41,42],[57,39,41,43],[57,45,41,49],[57,49,41,53],[57,53,41,57,"_a"],[57,55,41,59],[57,60,41,64],[57,65,41,69],[57,66,41,70],[57,69,41,73,"_a"],[57,71,41,75],[57,74,41,78],[57,76,41,80],[58,6,42,8],[58,10,42,12,"opts"],[58,14,42,16],[58,15,42,17,"xmlMode"],[58,22,42,24],[58,27,42,29],[58,36,42,38],[58,38,42,40],[59,8,43,12],[60,8,44,12,"key"],[60,11,44,15],[60,14,44,18],[60,15,44,19,"_b"],[60,17,44,21],[60,20,44,24,"attributeNames"],[60,35,44,38],[60,36,44,38,"attributeNames"],[60,50,44,38],[60,51,44,39,"get"],[60,54,44,42],[60,55,44,43,"key"],[60,58,44,46],[60,59,44,47],[60,65,44,53],[60,69,44,57],[60,73,44,61,"_b"],[60,75,44,63],[60,80,44,68],[60,85,44,73],[60,86,44,74],[60,89,44,77,"_b"],[60,91,44,79],[60,94,44,82,"key"],[60,97,44,85],[61,6,45,8],[62,6,46,8],[62,10,46,12],[62,11,46,13,"opts"],[62,15,46,17],[62,16,46,18,"emptyAttrs"],[62,26,46,28],[62,30,46,32],[62,31,46,33,"opts"],[62,35,46,37],[62,36,46,38,"xmlMode"],[62,43,46,45],[62,47,46,49,"value"],[62,52,46,54],[62,57,46,59],[62,59,46,61],[62,61,46,63],[63,8,47,12],[63,15,47,19,"key"],[63,18,47,22],[64,6,48,8],[65,6,49,8],[65,13,49,15],[65,16,49,18,"key"],[65,19,49,21],[65,24,49,26,"encode"],[65,30,49,32],[65,31,49,33,"value"],[65,36,49,38],[65,37,49,39],[65,40,49,42],[66,4,50,4],[66,5,50,5],[66,6,50,6],[66,7,51,9,"join"],[66,11,51,13],[66,12,51,14],[66,15,51,17],[66,16,51,18],[67,2,52,0],[68,2,53,0],[69,0,54,0],[70,0,55,0],[71,2,56,0],[71,6,56,6,"singleTag"],[71,15,56,15],[71,18,56,18],[71,22,56,22,"Set"],[71,25,56,25],[71,26,56,26],[71,27,57,4],[71,33,57,10],[71,35,58,4],[71,41,58,10],[71,43,59,4],[71,53,59,14],[71,55,60,4],[71,59,60,8],[71,61,61,4],[71,66,61,9],[71,68,62,4],[71,77,62,13],[71,79,63,4],[71,86,63,11],[71,88,64,4],[71,95,64,11],[71,97,65,4],[71,101,65,8],[71,103,66,4],[71,108,66,9],[71,110,67,4],[71,117,67,11],[71,119,68,4],[71,128,68,13],[71,130,69,4],[71,138,69,12],[71,140,70,4],[71,146,70,10],[71,148,71,4],[71,154,71,10],[71,156,72,4],[71,163,72,11],[71,165,73,4],[71,173,73,12],[71,175,74,4],[71,182,74,11],[71,184,75,4],[71,189,75,9],[71,190,76,1],[71,191,76,2],[72,2,77,0],[73,0,78,0],[74,0,79,0],[75,0,80,0],[76,0,81,0],[77,0,82,0],[78,0,83,0],[79,0,84,0],[80,2,85,7],[80,11,85,16,"render"],[80,17,85,22,"render"],[80,18,85,23,"node"],[80,22,85,27],[80,24,85,43],[81,4,85,43],[81,8,85,29,"options"],[81,15,85,36],[81,18,85,36,"arguments"],[81,27,85,36],[81,28,85,36,"length"],[81,34,85,36],[81,42,85,36,"arguments"],[81,51,85,36],[81,59,85,36,"undefined"],[81,68,85,36],[81,71,85,36,"arguments"],[81,80,85,36],[81,86,85,39],[81,87,85,40],[81,88,85,41],[82,4,86,4],[82,8,86,10,"nodes"],[82,13,86,15],[82,16,86,18],[82,24,86,26],[82,28,86,30,"node"],[82,32,86,34],[82,35,86,37,"node"],[82,39,86,41],[82,42,86,44],[82,43,86,45,"node"],[82,47,86,49],[82,48,86,50],[83,4,87,4],[83,8,87,8,"output"],[83,14,87,14],[83,17,87,17],[83,19,87,19],[84,4,88,4],[84,9,88,9],[84,13,88,13,"i"],[84,14,88,14],[84,17,88,17],[84,18,88,18],[84,20,88,20,"i"],[84,21,88,21],[84,24,88,24,"nodes"],[84,29,88,29],[84,30,88,30,"length"],[84,36,88,36],[84,38,88,38,"i"],[84,39,88,39],[84,41,88,41],[84,43,88,43],[85,6,89,8,"output"],[85,12,89,14],[85,16,89,18,"renderNode"],[85,26,89,28],[85,27,89,29,"nodes"],[85,32,89,34],[85,33,89,35,"i"],[85,34,89,36],[85,35,89,37],[85,37,89,39,"options"],[85,44,89,46],[85,45,89,47],[86,4,90,4],[87,4,91,4],[87,11,91,11,"output"],[87,17,91,17],[88,2,92,0],[89,2,93,0],[89,6,93,0,"_default"],[89,14,93,0],[89,17,93,15,"render"],[89,23,93,21],[90,2,94,0],[90,11,94,9,"renderNode"],[90,21,94,19,"renderNode"],[90,22,94,20,"node"],[90,26,94,24],[90,28,94,26,"options"],[90,35,94,33],[90,37,94,35],[91,4,95,4],[91,12,95,12,"node"],[91,16,95,16],[91,17,95,17,"type"],[91,21,95,21],[92,6,96,8],[92,11,96,13,"ElementType"],[92,22,96,24],[92,23,96,25,"Root"],[92,27,96,29],[93,8,97,12],[93,15,97,19,"render"],[93,21,97,25],[93,22,97,26,"node"],[93,26,97,30],[93,27,97,31,"children"],[93,35,97,39],[93,37,97,41,"options"],[93,44,97,48],[93,45,97,49],[94,6,98,8],[95,6,99,8],[95,11,99,13,"ElementType"],[95,22,99,24],[95,23,99,25,"Doctype"],[95,30,99,32],[96,6,100,8],[96,11,100,13,"ElementType"],[96,22,100,24],[96,23,100,25,"Directive"],[96,32,100,34],[97,8,101,12],[97,15,101,19,"renderDirective"],[97,30,101,34],[97,31,101,35,"node"],[97,35,101,39],[97,36,101,40],[98,6,102,8],[98,11,102,13,"ElementType"],[98,22,102,24],[98,23,102,25,"Comment"],[98,30,102,32],[99,8,103,12],[99,15,103,19,"renderComment"],[99,28,103,32],[99,29,103,33,"node"],[99,33,103,37],[99,34,103,38],[100,6,104,8],[100,11,104,13,"ElementType"],[100,22,104,24],[100,23,104,25,"CDATA"],[100,28,104,30],[101,8,105,12],[101,15,105,19,"renderCdata"],[101,26,105,30],[101,27,105,31,"node"],[101,31,105,35],[101,32,105,36],[102,6,106,8],[102,11,106,13,"ElementType"],[102,22,106,24],[102,23,106,25,"Script"],[102,29,106,31],[103,6,107,8],[103,11,107,13,"ElementType"],[103,22,107,24],[103,23,107,25,"Style"],[103,28,107,30],[104,6,108,8],[104,11,108,13,"ElementType"],[104,22,108,24],[104,23,108,25,"Tag"],[104,26,108,28],[105,8,109,12],[105,15,109,19,"renderTag"],[105,24,109,28],[105,25,109,29,"node"],[105,29,109,33],[105,31,109,35,"options"],[105,38,109,42],[105,39,109,43],[106,6,110,8],[106,11,110,13,"ElementType"],[106,22,110,24],[106,23,110,25,"Text"],[106,27,110,29],[107,8,111,12],[107,15,111,19,"renderText"],[107,25,111,29],[107,26,111,30,"node"],[107,30,111,34],[107,32,111,36,"options"],[107,39,111,43],[107,40,111,44],[108,4,112,4],[109,2,113,0],[110,2,114,0],[110,6,114,6,"foreignModeIntegrationPoints"],[110,34,114,34],[110,37,114,37],[110,41,114,41,"Set"],[110,44,114,44],[110,45,114,45],[110,46,115,4],[110,50,115,8],[110,52,116,4],[110,56,116,8],[110,58,117,4],[110,62,117,8],[110,64,118,4],[110,68,118,8],[110,70,119,4],[110,77,119,11],[110,79,120,4],[110,95,120,20],[110,97,121,4],[110,112,121,19],[110,114,122,4],[110,120,122,10],[110,122,123,4],[110,129,123,11],[110,130,124,1],[110,131,124,2],[111,2,125,0],[111,6,125,6,"foreignElements"],[111,21,125,21],[111,24,125,24],[111,28,125,28,"Set"],[111,31,125,31],[111,32,125,32],[111,33,125,33],[111,38,125,38],[111,40,125,40],[111,46,125,46],[111,47,125,47],[111,48,125,48],[112,2,126,0],[112,11,126,9,"renderTag"],[112,20,126,18,"renderTag"],[112,21,126,19,"elem"],[112,25,126,23],[112,27,126,25,"opts"],[112,31,126,29],[112,33,126,31],[113,4,127,4],[113,8,127,8,"_a"],[113,10,127,10],[114,4,128,4],[115,4,129,4],[115,8,129,8,"opts"],[115,12,129,12],[115,13,129,13,"xmlMode"],[115,20,129,20],[115,25,129,25],[115,34,129,34],[115,36,129,36],[116,6,130,8],[117,6,131,8,"elem"],[117,10,131,12],[117,11,131,13,"name"],[117,15,131,17],[117,18,131,20],[117,19,131,21,"_a"],[117,21,131,23],[117,24,131,26,"elementNames"],[117,39,131,38],[117,40,131,38,"elementNames"],[117,52,131,38],[117,53,131,39,"get"],[117,56,131,42],[117,57,131,43,"elem"],[117,61,131,47],[117,62,131,48,"name"],[117,66,131,52],[117,67,131,53],[117,73,131,59],[117,77,131,63],[117,81,131,67,"_a"],[117,83,131,69],[117,88,131,74],[117,93,131,79],[117,94,131,80],[117,97,131,83,"_a"],[117,99,131,85],[117,102,131,88,"elem"],[117,106,131,92],[117,107,131,93,"name"],[117,111,131,97],[118,6,132,8],[119,6,133,8],[119,10,133,12,"elem"],[119,14,133,16],[119,15,133,17,"parent"],[119,21,133,23],[119,25,134,12,"foreignModeIntegrationPoints"],[119,53,134,40],[119,54,134,41,"has"],[119,57,134,44],[119,58,134,45,"elem"],[119,62,134,49],[119,63,134,50,"parent"],[119,69,134,56],[119,70,134,57,"name"],[119,74,134,61],[119,75,134,62],[119,77,134,64],[120,8,135,12,"opts"],[120,12,135,16],[120,15,135,19],[121,10,135,21],[121,13,135,24,"opts"],[121,17,135,28],[122,10,135,30,"xmlMode"],[122,17,135,37],[122,19,135,39],[123,8,135,45],[123,9,135,46],[124,6,136,8],[125,4,137,4],[126,4,138,4],[126,8,138,8],[126,9,138,9,"opts"],[126,13,138,13],[126,14,138,14,"xmlMode"],[126,21,138,21],[126,25,138,25,"foreignElements"],[126,40,138,40],[126,41,138,41,"has"],[126,44,138,44],[126,45,138,45,"elem"],[126,49,138,49],[126,50,138,50,"name"],[126,54,138,54],[126,55,138,55],[126,57,138,57],[127,6,139,8,"opts"],[127,10,139,12],[127,13,139,15],[128,8,139,17],[128,11,139,20,"opts"],[128,15,139,24],[129,8,139,26,"xmlMode"],[129,15,139,33],[129,17,139,35],[130,6,139,45],[130,7,139,46],[131,4,140,4],[132,4,141,4],[132,8,141,8,"tag"],[132,11,141,11],[132,14,141,14],[132,18,141,18,"elem"],[132,22,141,22],[132,23,141,23,"name"],[132,27,141,27],[132,29,141,29],[133,4,142,4],[133,8,142,10,"attribs"],[133,15,142,17],[133,18,142,20,"formatAttributes"],[133,34,142,36],[133,35,142,37,"elem"],[133,39,142,41],[133,40,142,42,"attribs"],[133,47,142,49],[133,49,142,51,"opts"],[133,53,142,55],[133,54,142,56],[134,4,143,4],[134,8,143,8,"attribs"],[134,15,143,15],[134,17,143,17],[135,6,144,8,"tag"],[135,9,144,11],[135,13,144,15],[135,17,144,19,"attribs"],[135,24,144,26],[135,26,144,28],[136,4,145,4],[137,4,146,4],[137,8,146,8,"elem"],[137,12,146,12],[137,13,146,13,"children"],[137,21,146,21],[137,22,146,22,"length"],[137,28,146,28],[137,33,146,33],[137,34,146,34],[137,39,147,9,"opts"],[137,43,147,13],[137,44,147,14,"xmlMode"],[137,51,147,21],[138,4,148,14],[139,4,149,16,"opts"],[139,8,149,20],[139,9,149,21,"selfClosingTags"],[139,24,149,36],[139,29,149,41],[139,34,149,46],[140,4,150,14],[141,4,151,16,"opts"],[141,8,151,20],[141,9,151,21,"selfClosingTags"],[141,24,151,36],[141,28,151,40,"singleTag"],[141,37,151,49],[141,38,151,50,"has"],[141,41,151,53],[141,42,151,54,"elem"],[141,46,151,58],[141,47,151,59,"name"],[141,51,151,63],[141,52,151,64],[141,53,151,65],[141,55,151,67],[142,6,152,8],[142,10,152,12],[142,11,152,13,"opts"],[142,15,152,17],[142,16,152,18,"xmlMode"],[142,23,152,25],[142,25,153,12,"tag"],[142,28,153,15],[142,32,153,19],[142,35,153,22],[143,6,154,8,"tag"],[143,9,154,11],[143,13,154,15],[143,17,154,19],[144,4,155,4],[144,5,155,5],[144,11,156,9],[145,6,157,8,"tag"],[145,9,157,11],[145,13,157,15],[145,16,157,18],[146,6,158,8],[146,10,158,12,"elem"],[146,14,158,16],[146,15,158,17,"children"],[146,23,158,25],[146,24,158,26,"length"],[146,30,158,32],[146,33,158,35],[146,34,158,36],[146,36,158,38],[147,8,159,12,"tag"],[147,11,159,15],[147,15,159,19,"render"],[147,21,159,25],[147,22,159,26,"elem"],[147,26,159,30],[147,27,159,31,"children"],[147,35,159,39],[147,37,159,41,"opts"],[147,41,159,45],[147,42,159,46],[148,6,160,8],[149,6,161,8],[149,10,161,12,"opts"],[149,14,161,16],[149,15,161,17,"xmlMode"],[149,22,161,24],[149,26,161,28],[149,27,161,29,"singleTag"],[149,36,161,38],[149,37,161,39,"has"],[149,40,161,42],[149,41,161,43,"elem"],[149,45,161,47],[149,46,161,48,"name"],[149,50,161,52],[149,51,161,53],[149,53,161,55],[150,8,162,12,"tag"],[150,11,162,15],[150,15,162,19],[150,20,162,24,"elem"],[150,24,162,28],[150,25,162,29,"name"],[150,29,162,33],[150,32,162,36],[151,6,163,8],[152,4,164,4],[153,4,165,4],[153,11,165,11,"tag"],[153,14,165,14],[154,2,166,0],[155,2,167,0],[155,11,167,9,"renderDirective"],[155,26,167,24,"renderDirective"],[155,27,167,25,"elem"],[155,31,167,29],[155,33,167,31],[156,4,168,4],[156,11,168,11],[156,15,168,15,"elem"],[156,19,168,19],[156,20,168,20,"data"],[156,24,168,24],[156,27,168,27],[157,2,169,0],[158,2,170,0],[158,11,170,9,"renderText"],[158,21,170,19,"renderText"],[158,22,170,20,"elem"],[158,26,170,24],[158,28,170,26,"opts"],[158,32,170,30],[158,34,170,32],[159,4,171,4],[159,8,171,8,"_a"],[159,10,171,10],[160,4,172,4],[160,8,172,8,"data"],[160,12,172,12],[160,15,172,15,"elem"],[160,19,172,19],[160,20,172,20,"data"],[160,24,172,24],[160,28,172,28],[160,30,172,30],[161,4,173,4],[162,4,174,4],[162,8,174,8],[162,9,174,9],[162,10,174,10,"_a"],[162,12,174,12],[162,15,174,15,"opts"],[162,19,174,19],[162,20,174,20,"encodeEntities"],[162,34,174,34],[162,40,174,40],[162,44,174,44],[162,48,174,48,"_a"],[162,50,174,50],[162,55,174,55],[162,60,174,60],[162,61,174,61],[162,64,174,64,"_a"],[162,66,174,66],[162,69,174,69,"opts"],[162,73,174,73],[162,74,174,74,"decodeEntities"],[162,88,174,88],[162,94,174,94],[162,99,174,99],[162,103,175,8],[162,105,175,10],[162,106,175,11,"opts"],[162,110,175,15],[162,111,175,16,"xmlMode"],[162,118,175,23],[162,122,176,12,"elem"],[162,126,176,16],[162,127,176,17,"parent"],[162,133,176,23],[162,137,177,12,"unencodedElements"],[162,154,177,29],[162,155,177,30,"has"],[162,158,177,33],[162,159,177,34,"elem"],[162,163,177,38],[162,164,177,39,"parent"],[162,170,177,45],[162,171,177,46,"name"],[162,175,177,50],[162,176,177,51],[162,177,177,52],[162,179,177,54],[163,6,178,8,"data"],[163,10,178,12],[163,13,179,12,"opts"],[163,17,179,16],[163,18,179,17,"xmlMode"],[163,25,179,24],[163,29,179,28,"opts"],[163,33,179,32],[163,34,179,33,"encodeEntities"],[163,48,179,47],[163,53,179,52],[163,59,179,58],[163,62,180,18],[163,66,180,18,"encodeXML"],[163,75,180,27],[163,76,180,27,"encodeXML"],[163,85,180,27],[163,87,180,28,"data"],[163,91,180,32],[163,92,180,33],[163,95,181,18],[163,99,181,18,"escapeText"],[163,108,181,28],[163,109,181,28,"escapeText"],[163,119,181,28],[163,121,181,29,"data"],[163,125,181,33],[163,126,181,34],[164,4,182,4],[165,4,183,4],[165,11,183,11,"data"],[165,15,183,15],[166,2,184,0],[167,2,185,0],[167,11,185,9,"renderCdata"],[167,22,185,20,"renderCdata"],[167,23,185,21,"elem"],[167,27,185,25],[167,29,185,27],[168,4,186,4],[168,11,186,11],[168,23,186,23,"elem"],[168,27,186,27],[168,28,186,28,"children"],[168,36,186,36],[168,37,186,37],[168,38,186,38],[168,39,186,39],[168,40,186,40,"data"],[168,44,186,44],[168,49,186,49],[169,2,187,0],[170,2,188,0],[170,11,188,9,"renderComment"],[170,24,188,22,"renderComment"],[170,25,188,23,"elem"],[170,29,188,27],[170,31,188,29],[171,4,189,4],[171,11,189,11],[171,18,189,18,"elem"],[171,22,189,22],[171,23,189,23,"data"],[171,27,189,27],[171,32,189,32],[172,2,190,0],[173,0,190,1],[173,3]],"functionMap":{"names":["<global>","replaceQuotes","formatAttributes","Object.keys.map$argument_0","render","renderNode","renderTag","renderDirective","renderText","renderCdata","renderComment"],"mappings":"AAA;ACsB;CDE;AEI;aCU;KDW;CFE;OIiC;CJO;AKE;CLmB;AMa;CNwC;AOC;CPE;AQC;CRc;ASC;CTE;AUC;CVE"},"hasCjsExports":false},"type":"js/module"}]}