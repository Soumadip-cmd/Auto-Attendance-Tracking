{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.removeElement = removeElement;\n  exports.replaceElement = replaceElement;\n  exports.appendChild = appendChild;\n  exports.append = append;\n  exports.prependChild = prependChild;\n  exports.prepend = prepend;\n  /**\n   * Remove an element from the dom\n   *\n   * @category Manipulation\n   * @param elem The element to be removed\n   */\n  function removeElement(elem) {\n    if (elem.prev) elem.prev.next = elem.next;\n    if (elem.next) elem.next.prev = elem.prev;\n    if (elem.parent) {\n      var childs = elem.parent.children;\n      var childsIndex = childs.lastIndexOf(elem);\n      if (childsIndex >= 0) {\n        childs.splice(childsIndex, 1);\n      }\n    }\n    elem.next = null;\n    elem.prev = null;\n    elem.parent = null;\n  }\n  /**\n   * Replace an element in the dom\n   *\n   * @category Manipulation\n   * @param elem The element to be replaced\n   * @param replacement The element to be added\n   */\n  function replaceElement(elem, replacement) {\n    var prev = replacement.prev = elem.prev;\n    if (prev) {\n      prev.next = replacement;\n    }\n    var next = replacement.next = elem.next;\n    if (next) {\n      next.prev = replacement;\n    }\n    var parent = replacement.parent = elem.parent;\n    if (parent) {\n      var childs = parent.children;\n      childs[childs.lastIndexOf(elem)] = replacement;\n      elem.parent = null;\n    }\n  }\n  /**\n   * Append a child to an element.\n   *\n   * @category Manipulation\n   * @param parent The element to append to.\n   * @param child The element to be added as a child.\n   */\n  function appendChild(parent, child) {\n    removeElement(child);\n    child.next = null;\n    child.parent = parent;\n    if (parent.children.push(child) > 1) {\n      var sibling = parent.children[parent.children.length - 2];\n      sibling.next = child;\n      child.prev = sibling;\n    } else {\n      child.prev = null;\n    }\n  }\n  /**\n   * Append an element after another.\n   *\n   * @category Manipulation\n   * @param elem The element to append after.\n   * @param next The element be added.\n   */\n  function append(elem, next) {\n    removeElement(next);\n    var parent = elem.parent;\n    var currNext = elem.next;\n    next.next = currNext;\n    next.prev = elem;\n    elem.next = next;\n    next.parent = parent;\n    if (currNext) {\n      currNext.prev = next;\n      if (parent) {\n        var childs = parent.children;\n        childs.splice(childs.lastIndexOf(currNext), 0, next);\n      }\n    } else if (parent) {\n      parent.children.push(next);\n    }\n  }\n  /**\n   * Prepend a child to an element.\n   *\n   * @category Manipulation\n   * @param parent The element to prepend before.\n   * @param child The element to be added as a child.\n   */\n  function prependChild(parent, child) {\n    removeElement(child);\n    child.parent = parent;\n    child.prev = null;\n    if (parent.children.unshift(child) !== 1) {\n      var sibling = parent.children[1];\n      sibling.prev = child;\n      child.next = sibling;\n    } else {\n      child.next = null;\n    }\n  }\n  /**\n   * Prepend an element before another.\n   *\n   * @category Manipulation\n   * @param elem The element to prepend before.\n   * @param prev The element be added.\n   */\n  function prepend(elem, prev) {\n    removeElement(prev);\n    var parent = elem.parent;\n    if (parent) {\n      var childs = parent.children;\n      childs.splice(childs.indexOf(elem), 0, prev);\n    }\n    if (elem.prev) {\n      elem.prev.next = prev;\n    }\n    prev.parent = parent;\n    prev.prev = elem.prev;\n    prev.next = elem;\n    elem.prev = prev;\n  }\n});","lineCount":141,"map":[[7,2,7,0,"exports"],[7,9,7,0],[7,10,7,0,"removeElement"],[7,23,7,0],[7,26,7,0,"removeElement"],[7,39,7,0],[8,2,30,0,"exports"],[8,9,30,0],[8,10,30,0,"replaceElement"],[8,24,30,0],[8,27,30,0,"replaceElement"],[8,41,30,0],[9,2,53,0,"exports"],[9,9,53,0],[9,10,53,0,"appendChild"],[9,21,53,0],[9,24,53,0,"appendChild"],[9,35,53,0],[10,2,73,0,"exports"],[10,9,73,0],[10,10,73,0,"append"],[10,16,73,0],[10,19,73,0,"append"],[10,25,73,0],[11,2,99,0,"exports"],[11,9,99,0],[11,10,99,0,"prependChild"],[11,22,99,0],[11,25,99,0,"prependChild"],[11,37,99,0],[12,2,119,0,"exports"],[12,9,119,0],[12,10,119,0,"prepend"],[12,17,119,0],[12,20,119,0,"prepend"],[12,27,119,0],[13,2,1,0],[14,0,2,0],[15,0,3,0],[16,0,4,0],[17,0,5,0],[18,0,6,0],[19,2,7,7],[19,11,7,16,"removeElement"],[19,24,7,29,"removeElement"],[19,25,7,30,"elem"],[19,29,7,34],[19,31,7,36],[20,4,8,4],[20,8,8,8,"elem"],[20,12,8,12],[20,13,8,13,"prev"],[20,17,8,17],[20,19,9,8,"elem"],[20,23,9,12],[20,24,9,13,"prev"],[20,28,9,17],[20,29,9,18,"next"],[20,33,9,22],[20,36,9,25,"elem"],[20,40,9,29],[20,41,9,30,"next"],[20,45,9,34],[21,4,10,4],[21,8,10,8,"elem"],[21,12,10,12],[21,13,10,13,"next"],[21,17,10,17],[21,19,11,8,"elem"],[21,23,11,12],[21,24,11,13,"next"],[21,28,11,17],[21,29,11,18,"prev"],[21,33,11,22],[21,36,11,25,"elem"],[21,40,11,29],[21,41,11,30,"prev"],[21,45,11,34],[22,4,12,4],[22,8,12,8,"elem"],[22,12,12,12],[22,13,12,13,"parent"],[22,19,12,19],[22,21,12,21],[23,6,13,8],[23,10,13,14,"childs"],[23,16,13,20],[23,19,13,23,"elem"],[23,23,13,27],[23,24,13,28,"parent"],[23,30,13,34],[23,31,13,35,"children"],[23,39,13,43],[24,6,14,8],[24,10,14,14,"childsIndex"],[24,21,14,25],[24,24,14,28,"childs"],[24,30,14,34],[24,31,14,35,"lastIndexOf"],[24,42,14,46],[24,43,14,47,"elem"],[24,47,14,51],[24,48,14,52],[25,6,15,8],[25,10,15,12,"childsIndex"],[25,21,15,23],[25,25,15,27],[25,26,15,28],[25,28,15,30],[26,8,16,12,"childs"],[26,14,16,18],[26,15,16,19,"splice"],[26,21,16,25],[26,22,16,26,"childsIndex"],[26,33,16,37],[26,35,16,39],[26,36,16,40],[26,37,16,41],[27,6,17,8],[28,4,18,4],[29,4,19,4,"elem"],[29,8,19,8],[29,9,19,9,"next"],[29,13,19,13],[29,16,19,16],[29,20,19,20],[30,4,20,4,"elem"],[30,8,20,8],[30,9,20,9,"prev"],[30,13,20,13],[30,16,20,16],[30,20,20,20],[31,4,21,4,"elem"],[31,8,21,8],[31,9,21,9,"parent"],[31,15,21,15],[31,18,21,18],[31,22,21,22],[32,2,22,0],[33,2,23,0],[34,0,24,0],[35,0,25,0],[36,0,26,0],[37,0,27,0],[38,0,28,0],[39,0,29,0],[40,2,30,7],[40,11,30,16,"replaceElement"],[40,25,30,30,"replaceElement"],[40,26,30,31,"elem"],[40,30,30,35],[40,32,30,37,"replacement"],[40,43,30,48],[40,45,30,50],[41,4,31,4],[41,8,31,10,"prev"],[41,12,31,14],[41,15,31,18,"replacement"],[41,26,31,29],[41,27,31,30,"prev"],[41,31,31,34],[41,34,31,37,"elem"],[41,38,31,41],[41,39,31,42,"prev"],[41,43,31,47],[42,4,32,4],[42,8,32,8,"prev"],[42,12,32,12],[42,14,32,14],[43,6,33,8,"prev"],[43,10,33,12],[43,11,33,13,"next"],[43,15,33,17],[43,18,33,20,"replacement"],[43,29,33,31],[44,4,34,4],[45,4,35,4],[45,8,35,10,"next"],[45,12,35,14],[45,15,35,18,"replacement"],[45,26,35,29],[45,27,35,30,"next"],[45,31,35,34],[45,34,35,37,"elem"],[45,38,35,41],[45,39,35,42,"next"],[45,43,35,47],[46,4,36,4],[46,8,36,8,"next"],[46,12,36,12],[46,14,36,14],[47,6,37,8,"next"],[47,10,37,12],[47,11,37,13,"prev"],[47,15,37,17],[47,18,37,20,"replacement"],[47,29,37,31],[48,4,38,4],[49,4,39,4],[49,8,39,10,"parent"],[49,14,39,16],[49,17,39,20,"replacement"],[49,28,39,31],[49,29,39,32,"parent"],[49,35,39,38],[49,38,39,41,"elem"],[49,42,39,45],[49,43,39,46,"parent"],[49,49,39,53],[50,4,40,4],[50,8,40,8,"parent"],[50,14,40,14],[50,16,40,16],[51,6,41,8],[51,10,41,14,"childs"],[51,16,41,20],[51,19,41,23,"parent"],[51,25,41,29],[51,26,41,30,"children"],[51,34,41,38],[52,6,42,8,"childs"],[52,12,42,14],[52,13,42,15,"childs"],[52,19,42,21],[52,20,42,22,"lastIndexOf"],[52,31,42,33],[52,32,42,34,"elem"],[52,36,42,38],[52,37,42,39],[52,38,42,40],[52,41,42,43,"replacement"],[52,52,42,54],[53,6,43,8,"elem"],[53,10,43,12],[53,11,43,13,"parent"],[53,17,43,19],[53,20,43,22],[53,24,43,26],[54,4,44,4],[55,2,45,0],[56,2,46,0],[57,0,47,0],[58,0,48,0],[59,0,49,0],[60,0,50,0],[61,0,51,0],[62,0,52,0],[63,2,53,7],[63,11,53,16,"appendChild"],[63,22,53,27,"appendChild"],[63,23,53,28,"parent"],[63,29,53,34],[63,31,53,36,"child"],[63,36,53,41],[63,38,53,43],[64,4,54,4,"removeElement"],[64,17,54,17],[64,18,54,18,"child"],[64,23,54,23],[64,24,54,24],[65,4,55,4,"child"],[65,9,55,9],[65,10,55,10,"next"],[65,14,55,14],[65,17,55,17],[65,21,55,21],[66,4,56,4,"child"],[66,9,56,9],[66,10,56,10,"parent"],[66,16,56,16],[66,19,56,19,"parent"],[66,25,56,25],[67,4,57,4],[67,8,57,8,"parent"],[67,14,57,14],[67,15,57,15,"children"],[67,23,57,23],[67,24,57,24,"push"],[67,28,57,28],[67,29,57,29,"child"],[67,34,57,34],[67,35,57,35],[67,38,57,38],[67,39,57,39],[67,41,57,41],[68,6,58,8],[68,10,58,14,"sibling"],[68,17,58,21],[68,20,58,24,"parent"],[68,26,58,30],[68,27,58,31,"children"],[68,35,58,39],[68,36,58,40,"parent"],[68,42,58,46],[68,43,58,47,"children"],[68,51,58,55],[68,52,58,56,"length"],[68,58,58,62],[68,61,58,65],[68,62,58,66],[68,63,58,67],[69,6,59,8,"sibling"],[69,13,59,15],[69,14,59,16,"next"],[69,18,59,20],[69,21,59,23,"child"],[69,26,59,28],[70,6,60,8,"child"],[70,11,60,13],[70,12,60,14,"prev"],[70,16,60,18],[70,19,60,21,"sibling"],[70,26,60,28],[71,4,61,4],[71,5,61,5],[71,11,62,9],[72,6,63,8,"child"],[72,11,63,13],[72,12,63,14,"prev"],[72,16,63,18],[72,19,63,21],[72,23,63,25],[73,4,64,4],[74,2,65,0],[75,2,66,0],[76,0,67,0],[77,0,68,0],[78,0,69,0],[79,0,70,0],[80,0,71,0],[81,0,72,0],[82,2,73,7],[82,11,73,16,"append"],[82,17,73,22,"append"],[82,18,73,23,"elem"],[82,22,73,27],[82,24,73,29,"next"],[82,28,73,33],[82,30,73,35],[83,4,74,4,"removeElement"],[83,17,74,17],[83,18,74,18,"next"],[83,22,74,22],[83,23,74,23],[84,4,75,4],[84,8,75,12,"parent"],[84,14,75,18],[84,17,75,23,"elem"],[84,21,75,27],[84,22,75,12,"parent"],[84,28,75,18],[85,4,76,4],[85,8,76,10,"currNext"],[85,16,76,18],[85,19,76,21,"elem"],[85,23,76,25],[85,24,76,26,"next"],[85,28,76,30],[86,4,77,4,"next"],[86,8,77,8],[86,9,77,9,"next"],[86,13,77,13],[86,16,77,16,"currNext"],[86,24,77,24],[87,4,78,4,"next"],[87,8,78,8],[87,9,78,9,"prev"],[87,13,78,13],[87,16,78,16,"elem"],[87,20,78,20],[88,4,79,4,"elem"],[88,8,79,8],[88,9,79,9,"next"],[88,13,79,13],[88,16,79,16,"next"],[88,20,79,20],[89,4,80,4,"next"],[89,8,80,8],[89,9,80,9,"parent"],[89,15,80,15],[89,18,80,18,"parent"],[89,24,80,24],[90,4,81,4],[90,8,81,8,"currNext"],[90,16,81,16],[90,18,81,18],[91,6,82,8,"currNext"],[91,14,82,16],[91,15,82,17,"prev"],[91,19,82,21],[91,22,82,24,"next"],[91,26,82,28],[92,6,83,8],[92,10,83,12,"parent"],[92,16,83,18],[92,18,83,20],[93,8,84,12],[93,12,84,18,"childs"],[93,18,84,24],[93,21,84,27,"parent"],[93,27,84,33],[93,28,84,34,"children"],[93,36,84,42],[94,8,85,12,"childs"],[94,14,85,18],[94,15,85,19,"splice"],[94,21,85,25],[94,22,85,26,"childs"],[94,28,85,32],[94,29,85,33,"lastIndexOf"],[94,40,85,44],[94,41,85,45,"currNext"],[94,49,85,53],[94,50,85,54],[94,52,85,56],[94,53,85,57],[94,55,85,59,"next"],[94,59,85,63],[94,60,85,64],[95,6,86,8],[96,4,87,4],[96,5,87,5],[96,11,88,9],[96,15,88,13,"parent"],[96,21,88,19],[96,23,88,21],[97,6,89,8,"parent"],[97,12,89,14],[97,13,89,15,"children"],[97,21,89,23],[97,22,89,24,"push"],[97,26,89,28],[97,27,89,29,"next"],[97,31,89,33],[97,32,89,34],[98,4,90,4],[99,2,91,0],[100,2,92,0],[101,0,93,0],[102,0,94,0],[103,0,95,0],[104,0,96,0],[105,0,97,0],[106,0,98,0],[107,2,99,7],[107,11,99,16,"prependChild"],[107,23,99,28,"prependChild"],[107,24,99,29,"parent"],[107,30,99,35],[107,32,99,37,"child"],[107,37,99,42],[107,39,99,44],[108,4,100,4,"removeElement"],[108,17,100,17],[108,18,100,18,"child"],[108,23,100,23],[108,24,100,24],[109,4,101,4,"child"],[109,9,101,9],[109,10,101,10,"parent"],[109,16,101,16],[109,19,101,19,"parent"],[109,25,101,25],[110,4,102,4,"child"],[110,9,102,9],[110,10,102,10,"prev"],[110,14,102,14],[110,17,102,17],[110,21,102,21],[111,4,103,4],[111,8,103,8,"parent"],[111,14,103,14],[111,15,103,15,"children"],[111,23,103,23],[111,24,103,24,"unshift"],[111,31,103,31],[111,32,103,32,"child"],[111,37,103,37],[111,38,103,38],[111,43,103,43],[111,44,103,44],[111,46,103,46],[112,6,104,8],[112,10,104,14,"sibling"],[112,17,104,21],[112,20,104,24,"parent"],[112,26,104,30],[112,27,104,31,"children"],[112,35,104,39],[112,36,104,40],[112,37,104,41],[112,38,104,42],[113,6,105,8,"sibling"],[113,13,105,15],[113,14,105,16,"prev"],[113,18,105,20],[113,21,105,23,"child"],[113,26,105,28],[114,6,106,8,"child"],[114,11,106,13],[114,12,106,14,"next"],[114,16,106,18],[114,19,106,21,"sibling"],[114,26,106,28],[115,4,107,4],[115,5,107,5],[115,11,108,9],[116,6,109,8,"child"],[116,11,109,13],[116,12,109,14,"next"],[116,16,109,18],[116,19,109,21],[116,23,109,25],[117,4,110,4],[118,2,111,0],[119,2,112,0],[120,0,113,0],[121,0,114,0],[122,0,115,0],[123,0,116,0],[124,0,117,0],[125,0,118,0],[126,2,119,7],[126,11,119,16,"prepend"],[126,18,119,23,"prepend"],[126,19,119,24,"elem"],[126,23,119,28],[126,25,119,30,"prev"],[126,29,119,34],[126,31,119,36],[127,4,120,4,"removeElement"],[127,17,120,17],[127,18,120,18,"prev"],[127,22,120,22],[127,23,120,23],[128,4,121,4],[128,8,121,12,"parent"],[128,14,121,18],[128,17,121,23,"elem"],[128,21,121,27],[128,22,121,12,"parent"],[128,28,121,18],[129,4,122,4],[129,8,122,8,"parent"],[129,14,122,14],[129,16,122,16],[130,6,123,8],[130,10,123,14,"childs"],[130,16,123,20],[130,19,123,23,"parent"],[130,25,123,29],[130,26,123,30,"children"],[130,34,123,38],[131,6,124,8,"childs"],[131,12,124,14],[131,13,124,15,"splice"],[131,19,124,21],[131,20,124,22,"childs"],[131,26,124,28],[131,27,124,29,"indexOf"],[131,34,124,36],[131,35,124,37,"elem"],[131,39,124,41],[131,40,124,42],[131,42,124,44],[131,43,124,45],[131,45,124,47,"prev"],[131,49,124,51],[131,50,124,52],[132,4,125,4],[133,4,126,4],[133,8,126,8,"elem"],[133,12,126,12],[133,13,126,13,"prev"],[133,17,126,17],[133,19,126,19],[134,6,127,8,"elem"],[134,10,127,12],[134,11,127,13,"prev"],[134,15,127,17],[134,16,127,18,"next"],[134,20,127,22],[134,23,127,25,"prev"],[134,27,127,29],[135,4,128,4],[136,4,129,4,"prev"],[136,8,129,8],[136,9,129,9,"parent"],[136,15,129,15],[136,18,129,18,"parent"],[136,24,129,24],[137,4,130,4,"prev"],[137,8,130,8],[137,9,130,9,"prev"],[137,13,130,13],[137,16,130,16,"elem"],[137,20,130,20],[137,21,130,21,"prev"],[137,25,130,25],[138,4,131,4,"prev"],[138,8,131,8],[138,9,131,9,"next"],[138,13,131,13],[138,16,131,16,"elem"],[138,20,131,20],[139,4,132,4,"elem"],[139,8,132,8],[139,9,132,9,"prev"],[139,13,132,13],[139,16,132,16,"prev"],[139,20,132,20],[140,2,133,0],[141,0,133,1],[141,3]],"functionMap":{"names":["<global>","removeElement","replaceElement","appendChild","append","prependChild","prepend"],"mappings":"AAA;OCM;CDe;OEQ;CFe;OGQ;CHY;OIQ;CJkB;OKQ;CLY;OMQ;CNc"},"hasCjsExports":false},"type":"js/module"}]}