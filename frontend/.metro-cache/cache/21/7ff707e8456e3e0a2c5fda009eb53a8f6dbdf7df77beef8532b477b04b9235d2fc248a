{"dependencies":[{"name":"domhandler","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"KYhnx5+o028X5IFQh7qGm6XZdSU=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.getChildren = getChildren;\n  exports.getParent = getParent;\n  exports.getSiblings = getSiblings;\n  exports.getAttributeValue = getAttributeValue;\n  exports.hasAttrib = hasAttrib;\n  exports.getName = getName;\n  exports.nextElementSibling = nextElementSibling;\n  exports.prevElementSibling = prevElementSibling;\n  var _domhandler = require(_dependencyMap[0], \"domhandler\");\n  /**\n   * Get a node's children.\n   *\n   * @category Traversal\n   * @param elem Node to get the children of.\n   * @returns `elem`'s children, or an empty array.\n   */\n  function getChildren(elem) {\n    return (0, _domhandler.hasChildren)(elem) ? elem.children : [];\n  }\n  /**\n   * Get a node's parent.\n   *\n   * @category Traversal\n   * @param elem Node to get the parent of.\n   * @returns `elem`'s parent node, or `null` if `elem` is a root node.\n   */\n  function getParent(elem) {\n    return elem.parent || null;\n  }\n  /**\n   * Gets an elements siblings, including the element itself.\n   *\n   * Attempts to get the children through the element's parent first. If we don't\n   * have a parent (the element is a root node), we walk the element's `prev` &\n   * `next` to get all remaining nodes.\n   *\n   * @category Traversal\n   * @param elem Element to get the siblings of.\n   * @returns `elem`'s siblings, including `elem`.\n   */\n  function getSiblings(elem) {\n    var parent = getParent(elem);\n    if (parent != null) return getChildren(parent);\n    var siblings = [elem];\n    var prev = elem.prev,\n      next = elem.next;\n    while (prev != null) {\n      siblings.unshift(prev);\n      var _prev = prev;\n      prev = _prev.prev;\n    }\n    while (next != null) {\n      siblings.push(next);\n      var _next = next;\n      next = _next.next;\n    }\n    return siblings;\n  }\n  /**\n   * Gets an attribute from an element.\n   *\n   * @category Traversal\n   * @param elem Element to check.\n   * @param name Attribute name to retrieve.\n   * @returns The element's attribute value, or `undefined`.\n   */\n  function getAttributeValue(elem, name) {\n    var _a;\n    return (_a = elem.attribs) === null || _a === void 0 ? void 0 : _a[name];\n  }\n  /**\n   * Checks whether an element has an attribute.\n   *\n   * @category Traversal\n   * @param elem Element to check.\n   * @param name Attribute name to look for.\n   * @returns Returns whether `elem` has the attribute `name`.\n   */\n  function hasAttrib(elem, name) {\n    return elem.attribs != null && Object.prototype.hasOwnProperty.call(elem.attribs, name) && elem.attribs[name] != null;\n  }\n  /**\n   * Get the tag name of an element.\n   *\n   * @category Traversal\n   * @param elem The element to get the name for.\n   * @returns The tag name of `elem`.\n   */\n  function getName(elem) {\n    return elem.name;\n  }\n  /**\n   * Returns the next element sibling of a node.\n   *\n   * @category Traversal\n   * @param elem The element to get the next sibling of.\n   * @returns `elem`'s next sibling that is a tag, or `null` if there is no next\n   * sibling.\n   */\n  function nextElementSibling(elem) {\n    var next = elem.next;\n    while (next !== null && !(0, _domhandler.isTag)(next)) {\n      var _next2 = next;\n      next = _next2.next;\n    }\n    return next;\n  }\n  /**\n   * Returns the previous element sibling of a node.\n   *\n   * @category Traversal\n   * @param elem The element to get the previous sibling of.\n   * @returns `elem`'s previous sibling that is a tag, or `null` if there is no\n   * previous sibling.\n   */\n  function prevElementSibling(elem) {\n    var prev = elem.prev;\n    while (prev !== null && !(0, _domhandler.isTag)(prev)) {\n      var _prev2 = prev;\n      prev = _prev2.prev;\n    }\n    return prev;\n  }\n});","lineCount":130,"map":[[7,2,9,0,"exports"],[7,9,9,0],[7,10,9,0,"getChildren"],[7,21,9,0],[7,24,9,0,"getChildren"],[7,35,9,0],[8,2,19,0,"exports"],[8,9,19,0],[8,10,19,0,"getParent"],[8,19,19,0],[8,22,19,0,"getParent"],[8,31,19,0],[9,2,33,0,"exports"],[9,9,33,0],[9,10,33,0,"getSiblings"],[9,21,33,0],[9,24,33,0,"getSiblings"],[9,35,33,0],[10,2,57,0,"exports"],[10,9,57,0],[10,10,57,0,"getAttributeValue"],[10,27,57,0],[10,30,57,0,"getAttributeValue"],[10,47,57,0],[11,2,69,0,"exports"],[11,9,69,0],[11,10,69,0,"hasAttrib"],[11,19,69,0],[11,22,69,0,"hasAttrib"],[11,31,69,0],[12,2,81,0,"exports"],[12,9,81,0],[12,10,81,0,"getName"],[12,17,81,0],[12,20,81,0,"getName"],[12,27,81,0],[13,2,92,0,"exports"],[13,9,92,0],[13,10,92,0,"nextElementSibling"],[13,28,92,0],[13,31,92,0,"nextElementSibling"],[13,49,92,0],[14,2,106,0,"exports"],[14,9,106,0],[14,10,106,0,"prevElementSibling"],[14,28,106,0],[14,31,106,0,"prevElementSibling"],[14,49,106,0],[15,2,1,0],[15,6,1,0,"_domhandler"],[15,17,1,0],[15,20,1,0,"require"],[15,27,1,0],[15,28,1,0,"_dependencyMap"],[15,42,1,0],[16,2,2,0],[17,0,3,0],[18,0,4,0],[19,0,5,0],[20,0,6,0],[21,0,7,0],[22,0,8,0],[23,2,9,7],[23,11,9,16,"getChildren"],[23,22,9,27,"getChildren"],[23,23,9,28,"elem"],[23,27,9,32],[23,29,9,34],[24,4,10,4],[24,11,10,11],[24,15,10,11,"hasChildren"],[24,26,10,22],[24,27,10,22,"hasChildren"],[24,38,10,22],[24,40,10,23,"elem"],[24,44,10,27],[24,45,10,28],[24,48,10,31,"elem"],[24,52,10,35],[24,53,10,36,"children"],[24,61,10,44],[24,64,10,47],[24,66,10,49],[25,2,11,0],[26,2,12,0],[27,0,13,0],[28,0,14,0],[29,0,15,0],[30,0,16,0],[31,0,17,0],[32,0,18,0],[33,2,19,7],[33,11,19,16,"getParent"],[33,20,19,25,"getParent"],[33,21,19,26,"elem"],[33,25,19,30],[33,27,19,32],[34,4,20,4],[34,11,20,11,"elem"],[34,15,20,15],[34,16,20,16,"parent"],[34,22,20,22],[34,26,20,26],[34,30,20,30],[35,2,21,0],[36,2,22,0],[37,0,23,0],[38,0,24,0],[39,0,25,0],[40,0,26,0],[41,0,27,0],[42,0,28,0],[43,0,29,0],[44,0,30,0],[45,0,31,0],[46,0,32,0],[47,2,33,7],[47,11,33,16,"getSiblings"],[47,22,33,27,"getSiblings"],[47,23,33,28,"elem"],[47,27,33,32],[47,29,33,34],[48,4,34,4],[48,8,34,10,"parent"],[48,14,34,16],[48,17,34,19,"getParent"],[48,26,34,28],[48,27,34,29,"elem"],[48,31,34,33],[48,32,34,34],[49,4,35,4],[49,8,35,8,"parent"],[49,14,35,14],[49,18,35,18],[49,22,35,22],[49,24,36,8],[49,31,36,15,"getChildren"],[49,42,36,26],[49,43,36,27,"parent"],[49,49,36,33],[49,50,36,34],[50,4,37,4],[50,8,37,10,"siblings"],[50,16,37,18],[50,19,37,21],[50,20,37,22,"elem"],[50,24,37,26],[50,25,37,27],[51,4,38,4],[51,8,38,10,"prev"],[51,12,38,14],[51,15,38,25,"elem"],[51,19,38,29],[51,20,38,10,"prev"],[51,24,38,14],[52,6,38,16,"next"],[52,10,38,20],[52,13,38,25,"elem"],[52,17,38,29],[52,18,38,16,"next"],[52,22,38,20],[53,4,39,4],[53,11,39,11,"prev"],[53,15,39,15],[53,19,39,19],[53,23,39,23],[53,25,39,25],[54,6,40,8,"siblings"],[54,14,40,16],[54,15,40,17,"unshift"],[54,22,40,24],[54,23,40,25,"prev"],[54,27,40,29],[54,28,40,30],[55,6,40,31],[55,10,40,31,"_prev"],[55,15,40,31],[55,18,41,20,"prev"],[55,22,41,24],[56,6,41,11,"prev"],[56,10,41,15],[56,13,41,15,"_prev"],[56,18,41,15],[56,19,41,11,"prev"],[56,23,41,15],[57,4,42,4],[58,4,43,4],[58,11,43,11,"next"],[58,15,43,15],[58,19,43,19],[58,23,43,23],[58,25,43,25],[59,6,44,8,"siblings"],[59,14,44,16],[59,15,44,17,"push"],[59,19,44,21],[59,20,44,22,"next"],[59,24,44,26],[59,25,44,27],[60,6,44,28],[60,10,44,28,"_next"],[60,15,44,28],[60,18,45,20,"next"],[60,22,45,24],[61,6,45,11,"next"],[61,10,45,15],[61,13,45,15,"_next"],[61,18,45,15],[61,19,45,11,"next"],[61,23,45,15],[62,4,46,4],[63,4,47,4],[63,11,47,11,"siblings"],[63,19,47,19],[64,2,48,0],[65,2,49,0],[66,0,50,0],[67,0,51,0],[68,0,52,0],[69,0,53,0],[70,0,54,0],[71,0,55,0],[72,0,56,0],[73,2,57,7],[73,11,57,16,"getAttributeValue"],[73,28,57,33,"getAttributeValue"],[73,29,57,34,"elem"],[73,33,57,38],[73,35,57,40,"name"],[73,39,57,44],[73,41,57,46],[74,4,58,4],[74,8,58,8,"_a"],[74,10,58,10],[75,4,59,4],[75,11,59,11],[75,12,59,12,"_a"],[75,14,59,14],[75,17,59,17,"elem"],[75,21,59,21],[75,22,59,22,"attribs"],[75,29,59,29],[75,35,59,35],[75,39,59,39],[75,43,59,43,"_a"],[75,45,59,45],[75,50,59,50],[75,55,59,55],[75,56,59,56],[75,59,59,59],[75,64,59,64],[75,65,59,65],[75,68,59,68,"_a"],[75,70,59,70],[75,71,59,71,"name"],[75,75,59,75],[75,76,59,76],[76,2,60,0],[77,2,61,0],[78,0,62,0],[79,0,63,0],[80,0,64,0],[81,0,65,0],[82,0,66,0],[83,0,67,0],[84,0,68,0],[85,2,69,7],[85,11,69,16,"hasAttrib"],[85,20,69,25,"hasAttrib"],[85,21,69,26,"elem"],[85,25,69,30],[85,27,69,32,"name"],[85,31,69,36],[85,33,69,38],[86,4,70,4],[86,11,70,12,"elem"],[86,15,70,16],[86,16,70,17,"attribs"],[86,23,70,24],[86,27,70,28],[86,31,70,32],[86,35,71,8,"Object"],[86,41,71,14],[86,42,71,15,"prototype"],[86,51,71,24],[86,52,71,25,"hasOwnProperty"],[86,66,71,39],[86,67,71,40,"call"],[86,71,71,44],[86,72,71,45,"elem"],[86,76,71,49],[86,77,71,50,"attribs"],[86,84,71,57],[86,86,71,59,"name"],[86,90,71,63],[86,91,71,64],[86,95,72,8,"elem"],[86,99,72,12],[86,100,72,13,"attribs"],[86,107,72,20],[86,108,72,21,"name"],[86,112,72,25],[86,113,72,26],[86,117,72,30],[86,121,72,34],[87,2,73,0],[88,2,74,0],[89,0,75,0],[90,0,76,0],[91,0,77,0],[92,0,78,0],[93,0,79,0],[94,0,80,0],[95,2,81,7],[95,11,81,16,"getName"],[95,18,81,23,"getName"],[95,19,81,24,"elem"],[95,23,81,28],[95,25,81,30],[96,4,82,4],[96,11,82,11,"elem"],[96,15,82,15],[96,16,82,16,"name"],[96,20,82,20],[97,2,83,0],[98,2,84,0],[99,0,85,0],[100,0,86,0],[101,0,87,0],[102,0,88,0],[103,0,89,0],[104,0,90,0],[105,0,91,0],[106,2,92,7],[106,11,92,16,"nextElementSibling"],[106,29,92,34,"nextElementSibling"],[106,30,92,35,"elem"],[106,34,92,39],[106,36,92,41],[107,4,93,4],[107,8,93,10,"next"],[107,12,93,14],[107,15,93,19,"elem"],[107,19,93,23],[107,20,93,10,"next"],[107,24,93,14],[108,4,94,4],[108,11,94,11,"next"],[108,15,94,15],[108,20,94,20],[108,24,94,24],[108,28,94,28],[108,29,94,29],[108,33,94,29,"isTag"],[108,44,94,34],[108,45,94,34,"isTag"],[108,50,94,34],[108,52,94,35,"next"],[108,56,94,39],[108,57,94,40],[109,6,94,40],[109,10,94,40,"_next2"],[109,16,94,40],[109,19,95,20,"next"],[109,23,95,24],[110,6,95,11,"next"],[110,10,95,15],[110,13,95,15,"_next2"],[110,19,95,15],[110,20,95,11,"next"],[110,24,95,15],[111,4,95,15],[112,4,96,4],[112,11,96,11,"next"],[112,15,96,15],[113,2,97,0],[114,2,98,0],[115,0,99,0],[116,0,100,0],[117,0,101,0],[118,0,102,0],[119,0,103,0],[120,0,104,0],[121,0,105,0],[122,2,106,7],[122,11,106,16,"prevElementSibling"],[122,29,106,34,"prevElementSibling"],[122,30,106,35,"elem"],[122,34,106,39],[122,36,106,41],[123,4,107,4],[123,8,107,10,"prev"],[123,12,107,14],[123,15,107,19,"elem"],[123,19,107,23],[123,20,107,10,"prev"],[123,24,107,14],[124,4,108,4],[124,11,108,11,"prev"],[124,15,108,15],[124,20,108,20],[124,24,108,24],[124,28,108,28],[124,29,108,29],[124,33,108,29,"isTag"],[124,44,108,34],[124,45,108,34,"isTag"],[124,50,108,34],[124,52,108,35,"prev"],[124,56,108,39],[124,57,108,40],[125,6,108,40],[125,10,108,40,"_prev2"],[125,16,108,40],[125,19,109,20,"prev"],[125,23,109,24],[126,6,109,11,"prev"],[126,10,109,15],[126,13,109,15,"_prev2"],[126,19,109,15],[126,20,109,11,"prev"],[126,24,109,15],[127,4,109,15],[128,4,110,4],[128,11,110,11,"prev"],[128,15,110,15],[129,2,111,0],[130,0,111,1],[130,3]],"functionMap":{"names":["<global>","getChildren","getParent","getSiblings","getAttributeValue","hasAttrib","getName","nextElementSibling","prevElementSibling"],"mappings":"AAA;OCQ;CDE;OEQ;CFE;OGY;CHe;OIS;CJG;OKS;CLI;OMQ;CNE;OOS;CPK;OQS;CRK"},"hasCjsExports":false},"type":"js/module"}]}