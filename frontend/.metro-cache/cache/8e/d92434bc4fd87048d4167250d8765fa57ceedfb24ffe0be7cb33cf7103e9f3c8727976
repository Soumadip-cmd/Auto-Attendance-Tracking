{"dependencies":[{"name":"css-what","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":57,"index":57}}],"key":"FEuNpzzBFcweP99ydYcGgGm7g9g=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return sortByProcedure;\n    }\n  });\n  exports.isTraversal = isTraversal;\n  var _cssWhat = require(_dependencyMap[0], \"css-what\");\n  var procedure = new Map([[_cssWhat.SelectorType.Universal, 50], [_cssWhat.SelectorType.Tag, 30], [_cssWhat.SelectorType.Attribute, 1], [_cssWhat.SelectorType.Pseudo, 0]]);\n  function isTraversal(token) {\n    return !procedure.has(token.type);\n  }\n  var attributes = new Map([[_cssWhat.AttributeAction.Exists, 10], [_cssWhat.AttributeAction.Equals, 8], [_cssWhat.AttributeAction.Not, 7], [_cssWhat.AttributeAction.Start, 6], [_cssWhat.AttributeAction.End, 6], [_cssWhat.AttributeAction.Any, 5]]);\n  /**\n   * Sort the parts of the passed selector,\n   * as there is potential for optimization\n   * (some types of selectors are faster than others)\n   *\n   * @param arr Selector to sort\n   */\n  function sortByProcedure(arr) {\n    var procs = arr.map(getProcedure);\n    for (var i = 1; i < arr.length; i++) {\n      var procNew = procs[i];\n      if (procNew < 0) continue;\n      for (var j = i - 1; j >= 0 && procNew < procs[j]; j--) {\n        var token = arr[j + 1];\n        arr[j + 1] = arr[j];\n        arr[j] = token;\n        procs[j + 1] = procs[j];\n        procs[j] = procNew;\n      }\n    }\n  }\n  function getProcedure(token) {\n    var _a, _b;\n    var proc = (_a = procedure.get(token.type)) !== null && _a !== void 0 ? _a : -1;\n    if (token.type === _cssWhat.SelectorType.Attribute) {\n      proc = (_b = attributes.get(token.action)) !== null && _b !== void 0 ? _b : 4;\n      if (token.action === _cssWhat.AttributeAction.Equals && token.name === \"id\") {\n        // Prefer ID selectors (eg. #ID)\n        proc = 9;\n      }\n      if (token.ignoreCase) {\n        /*\n         * IgnoreCase adds some overhead, prefer \"normal\" token\n         * this is a binary operation, to ensure it's still an int\n         */\n        proc >>= 1;\n      }\n    } else if (token.type === _cssWhat.SelectorType.Pseudo) {\n      if (!token.data) {\n        proc = 3;\n      } else if (token.name === \"has\" || token.name === \"contains\") {\n        proc = 0; // Expensive in any case\n      } else if (Array.isArray(token.data)) {\n        // Eg. :matches, :not\n        proc = Math.min(...token.data.map(d => Math.min(...d.map(getProcedure))));\n        // If we have traversals, try to avoid executing this selector\n        if (proc < 0) {\n          proc = 0;\n        }\n      } else {\n        proc = 2;\n      }\n    }\n    return proc;\n  }\n});","lineCount":75,"map":[[7,2,26,15,"Object"],[7,8,26,15],[7,9,26,15,"defineProperty"],[7,23,26,15],[7,24,26,15,"exports"],[7,31,26,15],[8,4,26,15,"enumerable"],[8,14,26,15],[9,4,26,15,"get"],[9,7,26,15],[9,18,26,15,"get"],[9,19,26,15],[10,6,26,15],[10,13,26,15,"sortByProcedure"],[10,28,26,15],[11,4,26,15],[12,2,26,15],[13,2,8,0,"exports"],[13,9,8,0],[13,10,8,0,"isTraversal"],[13,21,8,0],[13,24,8,0,"isTraversal"],[13,35,8,0],[14,2,1,0],[14,6,1,0,"_cssWhat"],[14,14,1,0],[14,17,1,0,"require"],[14,24,1,0],[14,25,1,0,"_dependencyMap"],[14,39,1,0],[15,2,2,0],[15,6,2,6,"procedure"],[15,15,2,15],[15,18,2,18],[15,22,2,22,"Map"],[15,25,2,25],[15,26,2,26],[15,27,3,4],[15,28,3,5,"SelectorType"],[15,36,3,17],[15,37,3,17,"SelectorType"],[15,49,3,17],[15,50,3,18,"Universal"],[15,59,3,27],[15,61,3,29],[15,63,3,31],[15,64,3,32],[15,66,4,4],[15,67,4,5,"SelectorType"],[15,75,4,17],[15,76,4,17,"SelectorType"],[15,88,4,17],[15,89,4,18,"Tag"],[15,92,4,21],[15,94,4,23],[15,96,4,25],[15,97,4,26],[15,99,5,4],[15,100,5,5,"SelectorType"],[15,108,5,17],[15,109,5,17,"SelectorType"],[15,121,5,17],[15,122,5,18,"Attribute"],[15,131,5,27],[15,133,5,29],[15,134,5,30],[15,135,5,31],[15,137,6,4],[15,138,6,5,"SelectorType"],[15,146,6,17],[15,147,6,17,"SelectorType"],[15,159,6,17],[15,160,6,18,"Pseudo"],[15,166,6,24],[15,168,6,26],[15,169,6,27],[15,170,6,28],[15,171,7,1],[15,172,7,2],[16,2,8,7],[16,11,8,16,"isTraversal"],[16,22,8,27,"isTraversal"],[16,23,8,28,"token"],[16,28,8,33],[16,30,8,35],[17,4,9,4],[17,11,9,11],[17,12,9,12,"procedure"],[17,21,9,21],[17,22,9,22,"has"],[17,25,9,25],[17,26,9,26,"token"],[17,31,9,31],[17,32,9,32,"type"],[17,36,9,36],[17,37,9,37],[18,2,10,0],[19,2,11,0],[19,6,11,6,"attributes"],[19,16,11,16],[19,19,11,19],[19,23,11,23,"Map"],[19,26,11,26],[19,27,11,27],[19,28,12,4],[19,29,12,5,"AttributeAction"],[19,37,12,20],[19,38,12,20,"AttributeAction"],[19,53,12,20],[19,54,12,21,"Exists"],[19,60,12,27],[19,62,12,29],[19,64,12,31],[19,65,12,32],[19,67,13,4],[19,68,13,5,"AttributeAction"],[19,76,13,20],[19,77,13,20,"AttributeAction"],[19,92,13,20],[19,93,13,21,"Equals"],[19,99,13,27],[19,101,13,29],[19,102,13,30],[19,103,13,31],[19,105,14,4],[19,106,14,5,"AttributeAction"],[19,114,14,20],[19,115,14,20,"AttributeAction"],[19,130,14,20],[19,131,14,21,"Not"],[19,134,14,24],[19,136,14,26],[19,137,14,27],[19,138,14,28],[19,140,15,4],[19,141,15,5,"AttributeAction"],[19,149,15,20],[19,150,15,20,"AttributeAction"],[19,165,15,20],[19,166,15,21,"Start"],[19,171,15,26],[19,173,15,28],[19,174,15,29],[19,175,15,30],[19,177,16,4],[19,178,16,5,"AttributeAction"],[19,186,16,20],[19,187,16,20,"AttributeAction"],[19,202,16,20],[19,203,16,21,"End"],[19,206,16,24],[19,208,16,26],[19,209,16,27],[19,210,16,28],[19,212,17,4],[19,213,17,5,"AttributeAction"],[19,221,17,20],[19,222,17,20,"AttributeAction"],[19,237,17,20],[19,238,17,21,"Any"],[19,241,17,24],[19,243,17,26],[19,244,17,27],[19,245,17,28],[19,246,18,1],[19,247,18,2],[20,2,19,0],[21,0,20,0],[22,0,21,0],[23,0,22,0],[24,0,23,0],[25,0,24,0],[26,0,25,0],[27,2,26,15],[27,11,26,24,"sortByProcedure"],[27,26,26,39,"sortByProcedure"],[27,27,26,40,"arr"],[27,30,26,43],[27,32,26,45],[28,4,27,4],[28,8,27,10,"procs"],[28,13,27,15],[28,16,27,18,"arr"],[28,19,27,21],[28,20,27,22,"map"],[28,23,27,25],[28,24,27,26,"getProcedure"],[28,36,27,38],[28,37,27,39],[29,4,28,4],[29,9,28,9],[29,13,28,13,"i"],[29,14,28,14],[29,17,28,17],[29,18,28,18],[29,20,28,20,"i"],[29,21,28,21],[29,24,28,24,"arr"],[29,27,28,27],[29,28,28,28,"length"],[29,34,28,34],[29,36,28,36,"i"],[29,37,28,37],[29,39,28,39],[29,41,28,41],[30,6,29,8],[30,10,29,14,"procNew"],[30,17,29,21],[30,20,29,24,"procs"],[30,25,29,29],[30,26,29,30,"i"],[30,27,29,31],[30,28,29,32],[31,6,30,8],[31,10,30,12,"procNew"],[31,17,30,19],[31,20,30,22],[31,21,30,23],[31,23,31,12],[32,6,32,8],[32,11,32,13],[32,15,32,17,"j"],[32,16,32,18],[32,19,32,21,"i"],[32,20,32,22],[32,23,32,25],[32,24,32,26],[32,26,32,28,"j"],[32,27,32,29],[32,31,32,33],[32,32,32,34],[32,36,32,38,"procNew"],[32,43,32,45],[32,46,32,48,"procs"],[32,51,32,53],[32,52,32,54,"j"],[32,53,32,55],[32,54,32,56],[32,56,32,58,"j"],[32,57,32,59],[32,59,32,61],[32,61,32,63],[33,8,33,12],[33,12,33,18,"token"],[33,17,33,23],[33,20,33,26,"arr"],[33,23,33,29],[33,24,33,30,"j"],[33,25,33,31],[33,28,33,34],[33,29,33,35],[33,30,33,36],[34,8,34,12,"arr"],[34,11,34,15],[34,12,34,16,"j"],[34,13,34,17],[34,16,34,20],[34,17,34,21],[34,18,34,22],[34,21,34,25,"arr"],[34,24,34,28],[34,25,34,29,"j"],[34,26,34,30],[34,27,34,31],[35,8,35,12,"arr"],[35,11,35,15],[35,12,35,16,"j"],[35,13,35,17],[35,14,35,18],[35,17,35,21,"token"],[35,22,35,26],[36,8,36,12,"procs"],[36,13,36,17],[36,14,36,18,"j"],[36,15,36,19],[36,18,36,22],[36,19,36,23],[36,20,36,24],[36,23,36,27,"procs"],[36,28,36,32],[36,29,36,33,"j"],[36,30,36,34],[36,31,36,35],[37,8,37,12,"procs"],[37,13,37,17],[37,14,37,18,"j"],[37,15,37,19],[37,16,37,20],[37,19,37,23,"procNew"],[37,26,37,30],[38,6,38,8],[39,4,39,4],[40,2,40,0],[41,2,41,0],[41,11,41,9,"getProcedure"],[41,23,41,21,"getProcedure"],[41,24,41,22,"token"],[41,29,41,27],[41,31,41,29],[42,4,42,4],[42,8,42,8,"_a"],[42,10,42,10],[42,12,42,12,"_b"],[42,14,42,14],[43,4,43,4],[43,8,43,8,"proc"],[43,12,43,12],[43,15,43,15],[43,16,43,16,"_a"],[43,18,43,18],[43,21,43,21,"procedure"],[43,30,43,30],[43,31,43,31,"get"],[43,34,43,34],[43,35,43,35,"token"],[43,40,43,40],[43,41,43,41,"type"],[43,45,43,45],[43,46,43,46],[43,52,43,52],[43,56,43,56],[43,60,43,60,"_a"],[43,62,43,62],[43,67,43,67],[43,72,43,72],[43,73,43,73],[43,76,43,76,"_a"],[43,78,43,78],[43,81,43,81],[43,82,43,82],[43,83,43,83],[44,4,44,4],[44,8,44,8,"token"],[44,13,44,13],[44,14,44,14,"type"],[44,18,44,18],[44,23,44,23,"SelectorType"],[44,31,44,35],[44,32,44,35,"SelectorType"],[44,44,44,35],[44,45,44,36,"Attribute"],[44,54,44,45],[44,56,44,47],[45,6,45,8,"proc"],[45,10,45,12],[45,13,45,15],[45,14,45,16,"_b"],[45,16,45,18],[45,19,45,21,"attributes"],[45,29,45,31],[45,30,45,32,"get"],[45,33,45,35],[45,34,45,36,"token"],[45,39,45,41],[45,40,45,42,"action"],[45,46,45,48],[45,47,45,49],[45,53,45,55],[45,57,45,59],[45,61,45,63,"_b"],[45,63,45,65],[45,68,45,70],[45,73,45,75],[45,74,45,76],[45,77,45,79,"_b"],[45,79,45,81],[45,82,45,84],[45,83,45,85],[46,6,46,8],[46,10,46,12,"token"],[46,15,46,17],[46,16,46,18,"action"],[46,22,46,24],[46,27,46,29,"AttributeAction"],[46,35,46,44],[46,36,46,44,"AttributeAction"],[46,51,46,44],[46,52,46,45,"Equals"],[46,58,46,51],[46,62,46,55,"token"],[46,67,46,60],[46,68,46,61,"name"],[46,72,46,65],[46,77,46,70],[46,81,46,74],[46,83,46,76],[47,8,47,12],[48,8,48,12,"proc"],[48,12,48,16],[48,15,48,19],[48,16,48,20],[49,6,49,8],[50,6,50,8],[50,10,50,12,"token"],[50,15,50,17],[50,16,50,18,"ignoreCase"],[50,26,50,28],[50,28,50,30],[51,8,51,12],[52,0,52,0],[53,0,53,0],[54,0,54,0],[55,8,55,12,"proc"],[55,12,55,16],[55,17,55,21],[55,18,55,22],[56,6,56,8],[57,4,57,4],[57,5,57,5],[57,11,58,9],[57,15,58,13,"token"],[57,20,58,18],[57,21,58,19,"type"],[57,25,58,23],[57,30,58,28,"SelectorType"],[57,38,58,40],[57,39,58,40,"SelectorType"],[57,51,58,40],[57,52,58,41,"Pseudo"],[57,58,58,47],[57,60,58,49],[58,6,59,8],[58,10,59,12],[58,11,59,13,"token"],[58,16,59,18],[58,17,59,19,"data"],[58,21,59,23],[58,23,59,25],[59,8,60,12,"proc"],[59,12,60,16],[59,15,60,19],[59,16,60,20],[60,6,61,8],[60,7,61,9],[60,13,62,13],[60,17,62,17,"token"],[60,22,62,22],[60,23,62,23,"name"],[60,27,62,27],[60,32,62,32],[60,37,62,37],[60,41,62,41,"token"],[60,46,62,46],[60,47,62,47,"name"],[60,51,62,51],[60,56,62,56],[60,66,62,66],[60,68,62,68],[61,8,63,12,"proc"],[61,12,63,16],[61,15,63,19],[61,16,63,20],[61,17,63,21],[61,18,63,22],[62,6,64,8],[62,7,64,9],[62,13,65,13],[62,17,65,17,"Array"],[62,22,65,22],[62,23,65,23,"isArray"],[62,30,65,30],[62,31,65,31,"token"],[62,36,65,36],[62,37,65,37,"data"],[62,41,65,41],[62,42,65,42],[62,44,65,44],[63,8,66,12],[64,8,67,12,"proc"],[64,12,67,16],[64,15,67,19,"Math"],[64,19,67,23],[64,20,67,24,"min"],[64,23,67,27],[64,24,67,28],[64,27,67,31,"token"],[64,32,67,36],[64,33,67,37,"data"],[64,37,67,41],[64,38,67,42,"map"],[64,41,67,45],[64,42,67,47,"d"],[64,43,67,48],[64,47,67,53,"Math"],[64,51,67,57],[64,52,67,58,"min"],[64,55,67,61],[64,56,67,62],[64,59,67,65,"d"],[64,60,67,66],[64,61,67,67,"map"],[64,64,67,70],[64,65,67,71,"getProcedure"],[64,77,67,83],[64,78,67,84],[64,79,67,85],[64,80,67,86],[64,81,67,87],[65,8,68,12],[66,8,69,12],[66,12,69,16,"proc"],[66,16,69,20],[66,19,69,23],[66,20,69,24],[66,22,69,26],[67,10,70,16,"proc"],[67,14,70,20],[67,17,70,23],[67,18,70,24],[68,8,71,12],[69,6,72,8],[69,7,72,9],[69,13,73,13],[70,8,74,12,"proc"],[70,12,74,16],[70,15,74,19],[70,16,74,20],[71,6,75,8],[72,4,76,4],[73,4,77,4],[73,11,77,11,"proc"],[73,15,77,15],[74,2,78,0],[75,0,78,1],[75,3]],"functionMap":{"names":["<global>","isTraversal","sortByProcedure","getProcedure","token.data.map$argument_0"],"mappings":"AAA;OCO;CDE;eEgB;CFc;AGC;8CC0B,uCD;CHW"},"hasCjsExports":false},"type":"js/module"}]}